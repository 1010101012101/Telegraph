language: objective-c
osx_image: xcode8.3

branches:
  only:
    - master

env:
  global:
    - LANG=en_US.UTF-8
    - LC_CTYPE=en_US.UTF-8
    - WORKSPACE=Telegraph.xcworkspace
  matrix:
    # Latest devices
    - DESTINATION="platform=iOS Simulator,name=iPhone 7 Plus"           SCHEME="Telegraph iOS"      RUN_TESTS="YES"
    - DESTINATION="platform=iOS Simulator,name=iPad Pro (12.9-inch)"    SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=tvOS Simulator,name=Apple TV 1080p"         SCHEME="Telegraph tvOS"     RUN_TESTS="NO"
    - DESTINATION="platform=macOS,arch=x86_64"                          SCHEME="Telegraph macOS"    RUN_TESTS="NO"

    # Older devices
    - DESTINATION="platform=iOS Simulator,name=iPad 2,OS=9.0"           SCHEME="Telegraph iOS"      RUN_TESTS="YES"
    - DESTINATION="platform=iOS Simulator,name=iPhone 5s,OS=9.0"        SCHEME="Telegraph iOS"      RUN_TESTS="NO"

before_install:
  - gem install cocoapods --no-rdoc --no-ri --no-document --quiet
  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet
  - pod --version
  - xcodebuild -version
  - xcodebuild -showsdks

script:
  # Produce a failure return code if any command errors
  - set -o pipefail

  # Build in Debug mode
  - xcodebuild clean build -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO | xcpretty -c;

  # Build in Release mode
  - xcodebuild clean build -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO | xcpretty -c;

  # Run the tests
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild test -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES | xcpretty -c;
    fi
